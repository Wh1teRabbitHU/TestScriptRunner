!function(){return function t(e,s,r){function n(u,o){if(!s[u]){if(!e[u]){var c="function"==typeof require&&require;if(!o&&c)return c(u,!0);if(i)return i(u,!0);var p=new Error("Cannot find module '"+u+"'");throw p.code="MODULE_NOT_FOUND",p}var a=s[u]={exports:{}};e[u][0].call(a.exports,function(t){var s=e[u][1][t];return n(s||t)},a,a.exports,t,e,s,r)}return s[u].exports}for(var i="function"==typeof require&&require,u=0;u<r.length;u++)n(r[u]);return n}}()({1:[function(t,e,s){"use strict";var r=t("./modules/test-script-runner"),n=t("./models/test-case"),i=t("./models/test-step");void 0===window.TestScriptRunner?window.TestScriptRunner={TestRunner:r,TestCase:n,TestStep:i}:window.console.log('"TestScriptRunner" global variable already taken!')},{"./models/test-case":2,"./models/test-step":3,"./modules/test-script-runner":4}],2:[function(t,e,s){"use strict";const r=1;e.exports=class{constructor({name:t,description:e}){this.name=t,this.description=e,this.steps=[],this.stepCounter=0,this.currentStepId=r-1}setTestRunner(t){this.testRunner=t,this.caseNumber=++t.caseCounter}addTestStep(t){this.steps.push(t),t.setTestCase(this)}runPrevStep(){this.currentStepId<=r||(this.currentStepId--,this.runCurrentStep())}runNextStep(){this.currentStepId>=this.stepCounter||(this.currentStepId++,this.runCurrentStep())}runStep(t){t>this.stepCounter||t<r?console.log("The given ID is not valid, its out of bound: "+t):(this.currentStepId=t,this.runCurrentStep())}runCurrentStep(){let t=this,e=t.steps.find(e=>e.stepNumber===t.currentStepId);void 0!==e?e.run():console.log("Cannot be found step with the following ID: "+t.currentStepId)}}},{}],3:[function(t,e,s){"use strict";e.exports=class{constructor({name:t,description:e,fn:s}){this.name=t,this.description=e,this.fn=s}setTestCase(t){this.parentCase=t,this.stepNumber=++t.stepCounter}run(){void 0!==this.fn&&this.fn()}}},{}],4:[function(t,e,s){"use strict";let r=[];var n=0;e.exports={testCases:function(){return r},addCase:function(t){r.push(t),t.caseNumber=++n}}},{}]},{},[1]);
//# sourceMappingURL=test-script-runner.min.js.map
