{"version":3,"sources":["test-script-runner-babel.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","TestRunner","TestCase","TestStep","window","TestScriptRunner","console","./models/test-case","./models/test-step","2","FIRST_STEP_ID","_ref","_classCallCheck","this","steps","stepCounter","_createClass","key","value","testRunner","caseNumber","caseCounter","testStep","push","name","currentStepId","runCurrentStep","stepId","log","self","currentStep","find","step","stepNumber","run","3","_ref2","description","fn","parentCase","4","cases","testCases","addCase","testCase"],"mappings":"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","file":"test-script-runner-babel.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n'use strict';\n\nvar TestRunner = require('./modules/test-script-runner');\nvar TestCase   = require('./models/test-case');\nvar TestStep   = require('./models/test-step');\n\nif (typeof window.TestScriptRunner == 'undefined') {\n\twindow.TestScriptRunner = {\n\t\tTestRunner: TestRunner,\n\t\tTestCase: TestCase,\n\t\tTestStep: TestStep\n\t};\n} else {\n\twindow.console.log('\"TestScriptRunner\" global variable already taken!');\n}\n},{\"./models/test-case\":2,\"./models/test-step\":3,\"./modules/test-script-runner\":4}],2:[function(require,module,exports){\n'use strict';\n\nconst FIRST_STEP_ID = 1;\n\nclass TestCase {\n\n\tconstructor({ name, description }) {\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t\tthis.steps = [];\n\t\tthis.stepCounter = 0;\n\t\tthis.currentStepId = FIRST_STEP_ID - 1;\n\t}\n\n\tsetTestRunner(testRunner) {\n\t\tthis.testRunner = testRunner;\n\t\tthis.caseNumber = ++testRunner.caseCounter;\n\t}\n\n\taddTestStep(testStep) {\n\t\tthis.steps.push(testStep);\n\n\t\ttestStep.setTestCase(this);\n\t}\n\n\trunPrevStep() {\n\t\tif (this.currentStepId <= FIRST_STEP_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentStepId--;\n\t\tthis.runCurrentStep();\n\t}\n\n\trunNextStep() {\n\t\tif (this.currentStepId >= this.stepCounter) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentStepId++;\n\t\tthis.runCurrentStep();\n\t}\n\n\trunStep(stepId) {\n\t\tif (stepId > this.stepCounter || stepId < FIRST_STEP_ID) {\n\t\t\tconsole.log('The given ID is not valid, its out of bound: ' + stepId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentStepId = stepId;\n\t\tthis.runCurrentStep();\n\t}\n\n\trunCurrentStep() {\n\t\tlet self = this,\n\t\t\tcurrentStep = self.steps.find((step) => {\n\t\t\t\treturn step.stepNumber === self.currentStepId;\n\t\t\t});\n\n\t\tif (typeof currentStep == 'undefined') {\n\t\t\tconsole.log('Cannot be found step with the following ID: ' + self.currentStepId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tcurrentStep.run();\n\t}\n\n}\n\nmodule.exports = TestCase;\n},{}],3:[function(require,module,exports){\n'use strict';\n\nclass TestStep {\n\n\tconstructor({ name, description, fn }) {\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t\tthis.fn = fn;\n\t}\n\n\tsetTestCase(parentCase) {\n\t\tthis.parentCase = parentCase;\n\t\tthis.stepNumber = ++parentCase.stepCounter;\n\t}\n\n\trun() {\n\t\tif (typeof this.fn == 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fn();\n\t}\n\n}\n\nmodule.exports = TestStep;\n},{}],4:[function(require,module,exports){\n'use strict';\n\nlet cases = [];\n\nvar caseCounter = 0;\n\nfunction testCases() {\n\treturn cases;\n}\n\nfunction addCase(testCase) {\n\tcases.push(testCase);\n\n\ttestCase.caseNumber = ++caseCounter;\n}\n\nmodule.exports = {\n\ttestCases: testCases,\n\taddCase: addCase\n};\n},{}]},{},[1]);\n"]}